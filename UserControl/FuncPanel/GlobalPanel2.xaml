<UserControl x:Class="sbid.UserControl.GlobalPanel2"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:sbid.UserControl"
             xmlns:vm="clr-namespace:sbid.ViewModel"
             xmlns:NetworkModel="clr-namespace:NetworkModel;assembly=NetworkModel"
             xmlns:NetworkUI="clr-namespace:NetworkUI;assembly=NetworkUI"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="4*" MinHeight="23px"/>
            <RowDefinition Height="96*"/>
        </Grid.RowDefinitions>
        <!--0, 工具栏-->
        <StackPanel Grid.Row="0" Orientation="Horizontal" Background="AliceBlue">
            <Button Content="进程模板" Click="Button_Click_Process"/>
            <Button Content="自定义类型" Click="Button_Click_UserType"/>
            <Button Content="公理"/>
            <Button Content="Initial Knowledge"/>
            <Button Content="Safety Property" Click="Button_Click_SafetyProperty"/>
            <Button Content="Security Property"/>
        </StackPanel>
        <!--1, 滚动条面板, 里面直接复用NetworkView-->
        <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Auto" 
                      Focusable="False" Name="scrollViewer">
            <!--[*]设置资源-->
            <ScrollViewer.Resources>
                <!--RoutedCommand类创建自己的命令,RoutedUICommand只多添加了Text属性作为命令显示的文本-->
                <RoutedUICommand x:Key="Commands.DeleteSelectedNodes"/>
                <RoutedUICommand x:Key="Commands.CreateNodes"/>
                <RoutedUICommand x:Key="Commands.Edit"/>
                <RoutedUICommand x:Key="Commands.EditStateMachine"/>

                <!--ConectionViewModel的数据模板,其中Start和End绑定线两端的源锚点和目标锚点-->
                <DataTemplate DataType="{x:Type NetworkModel:ConnectionViewModel}">
                    <!--用一个简单的箭头表达连线,见Arrow类-->
                    <NetworkUI:Arrow Stroke="Black" StrokeThickness="2" Fill="Black"
                         Start="{Binding SourceConnectorHotspot}"
                         End="{Binding DestConnectorHotspot}"
                         IsHitTestVisible="False"/>
                </DataTemplate>

                <!--设置NodeItem的控件模板-->
                <Style TargetType="{x:Type NetworkUI:NodeItem}">
                    <Setter Property="X" Value="{Binding X}"/>
                    <Setter Property="Y" Value="{Binding Y}"/>
                    <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                </Style>

                <!--设置ConnectorItem的控件模板-->
                <Style TargetType="{x:Type NetworkUI:ConnectorItem}">
                    <!--锚点中心-->
                    <Setter Property="Hotspot" Value="{Binding Hotspot, Mode=OneWayToSource}"/>
                    <!--外面的小正方形-->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type NetworkUI:ConnectorItem}">
                                <Rectangle Stroke="Black" Fill="White" Cursor="Hand"
                                   Width="12" Height="12" RadiusX="1" RadiusY="1"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <!--进程模板的数据模板-->
                <DataTemplate DataType="{x:Type vm:ProcessVM}">
                    <Grid MinWidth="120" MinHeight="140">
                        <Rectangle Stroke="Black" Fill="{Binding Color}" RadiusX="4" RadiusY="4"/>
                        <Grid Margin="-8">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="20*" MinHeight="20px"/>
                                <RowDefinition Height="1"/>
                                <RowDefinition Height="10*"/>
                                <RowDefinition Height="40*"/>
                                <RowDefinition Height="1"/>
                                <RowDefinition Height="10*"/>
                                <RowDefinition Height="40*"/>
                                <RowDefinition Height="1"/>
                                <RowDefinition Height="10*"/>
                                <RowDefinition Height="40*"/>
                                <RowDefinition Height="10*"/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0" Text="{Binding Name}"
                               HorizontalAlignment="Left" VerticalAlignment="Center" Margin="15,12,0,4"/>

                            <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" Margin="12,0,12,0" Background="Black"/>

                            <TextBlock Grid.Row="2" Text="Attribute:"
                               HorizontalAlignment="Left" VerticalAlignment="Center" Margin="15,2,0,2"/>

                            <ListBox Grid.Row="3" ItemsSource="{Binding Process.Attributes}" 
                                     Margin="9,0" Background="{Binding Color}" BorderBrush="{Binding Color}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Path=Type}"/>
                                            <TextBlock Text=" "/>
                                            <TextBlock Text="{Binding Path=Identifier}"/>
                                            <TextBlock Text=";"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>

                            <GridSplitter Grid.Row="4" HorizontalAlignment="Stretch" Margin="12,0,12,0" Background="Black"/>

                            <TextBlock Grid.Row="5" Text="Method:"
                               HorizontalAlignment="Left" VerticalAlignment="Center" Margin="15,2,0,2"/>

                            <ListBox Grid.Row="6" ItemsSource="{Binding Process.Methods}" 
                                     Margin="9,0" Background="{Binding Color}" BorderBrush="{Binding Color}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Path=ReturnType}"/>
                                            <TextBlock Text=" "/>
                                            <TextBlock Text="{Binding Path=Identifier}"/>
                                            <TextBlock Text="("/>
                                            <TextBlock Text="{Binding Path=ParaString}"/>
                                            <TextBlock Text=");["/>
                                            <TextBlock Text="{Binding Path=CryptoName}"/>
                                            <TextBlock Text="]"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>

                            <GridSplitter Grid.Row="7" HorizontalAlignment="Stretch" Margin="12,0,12,0" Background="Black"/>

                            <TextBlock Grid.Row="8" Text="CommMethod:"
                               HorizontalAlignment="Left" VerticalAlignment="Center" Margin="15,2,0,2"/>

                            <ListBox Grid.Row="9" ItemsSource="{Binding Process.CommMethods}" 
                                     Margin="9,0" Background="{Binding Color}" BorderBrush="{Binding Color}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Path=ReturnType}"/>
                                            <TextBlock Text=" "/>
                                            <TextBlock Text="{Binding Path=Identifier}"/>
                                            <TextBlock Text="("/>
                                            <TextBlock Text="{Binding Path=ParaString}"/>
                                            <TextBlock Text=");["/>
                                            <TextBlock Text="{Binding Path=InOut}"/>
                                            <TextBlock Text="]"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>

                            <TextBlock Grid.Row="10"/>
                        </Grid>
                        <Grid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="删除" Command="{StaticResource Commands.DeleteSelectedNodes}" ToolTip="删除类图"/>
                                <MenuItem Header="编辑" Command="{StaticResource Commands.Edit}" ToolTip="编辑内容"/>
                                <MenuItem Header="状态机" Command="{StaticResource Commands.EditStateMachine}" ToolTip="编辑状态机"/>
                            </ContextMenu>
                        </Grid.ContextMenu>
                    </Grid>
                </DataTemplate>
                
                <!--UserType的数据模板-->
                <DataTemplate DataType="{x:Type vm:UserTypeVM}">
                    <Grid MinWidth="120" MinHeight="120">
                        <!--显示出来的矩形-->
                        <Rectangle Stroke="Black" Fill="{Binding Color}" RadiusX="4" RadiusY="4"/>
                        <!--套着内容的Grid-->
                        <Grid Margin="-8">
                            <!--分成5个区域：类图名,分割线1,属性区域,分割线2,方法区域-->
                            <Grid.RowDefinitions>
                                <RowDefinition Height="20*" MinHeight="20px"/>
                                <RowDefinition Height="80*"/>
                                
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Text="{Binding Name}"
                               HorizontalAlignment="Left" VerticalAlignment="Center" Margin="35,12,0,4"/>
                            <ListBox Background="#00FFFF" Grid.Row="1" Margin="10 10 10 10" Name="attributeList" SelectionChanged="attributeList_SelectionChanged">
                                <ListBoxItem Tag="Red1">Red</ListBoxItem>
                            </ListBox>
                        </Grid>
                        <!--图形上的右键菜单-->
                        <Grid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="删除" Command="{StaticResource Commands.DeleteSelectedNodes}" ToolTip="删除类图"/>
                                <MenuItem Header="编辑" Command="{StaticResource Commands.Edit}" ToolTip="编辑内容"/>
                            </ContextMenu>
                        </Grid.ContextMenu>
                    </Grid>
                </DataTemplate>

                <!--SafetyProperty的数据模板-->
                <DataTemplate DataType="{x:Type vm:SafetyPropertyVM}">
                    <Grid MinWidth="120" MinHeight="120">
                        <!--显示出来的矩形-->
                        <Rectangle Stroke="Black" Fill="{Binding Color}" RadiusX="4" RadiusY="4"/>
                        <!--套着内容的Grid-->
                        <Grid Margin="-8">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="20*" MinHeight="20px"/>
                                <RowDefinition Height="1"/>
                                <RowDefinition Height="10*"/>
                                <RowDefinition Height="40*"/>
                                <RowDefinition Height="1"/>
                                <RowDefinition Height="10*"/>
                                <RowDefinition Height="40*"/>
                                <RowDefinition Height="10*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Text="{Binding Name}"
                               HorizontalAlignment="Left" VerticalAlignment="Center" Margin="15, 12, 0, 4"/>
                            <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" Background="Black" Margin="12,0,12,0"/>
                            <TextBlock Grid.Row="2" Text="[IVAR]: "
                               HorizontalAlignment="Left" VerticalAlignment="Center" Margin="15,2,0,2"/>
                            <ListBox Grid.Row="3" ItemsSource="{Binding SafetyProperty.Invariants}" 
                                     Margin="9,0" Background="{Binding Color}" BorderBrush="{Binding Color}">
                                
                            </ListBox>

                            <GridSplitter Grid.Row="4" Background="Black" HorizontalAlignment="Stretch" Margin="12,0,12,0"/>

                            <TextBlock Grid.Row="5" Text="[CTL]: "
                               HorizontalAlignment="Left" VerticalAlignment="Center" Margin="15,2,0,2"/>
                            <ListBox Grid.Row="6" ItemsSource="{Binding SafetyProperty.CTLs}" 
                                     Margin="9,0" Background="{Binding Color}" BorderBrush="{Binding Color}">
                                
                            </ListBox>

                            <TextBlock Grid.Row="7"/>
                        </Grid>
                        <!--图形上的右键菜单-->
                        <Grid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="删除" Command="{StaticResource Commands.DeleteSelectedNodes}" ToolTip="删除类图"/>
                                <MenuItem Header="编辑" Command="{StaticResource Commands.Edit}" ToolTip="编辑内容"/>
                            </ContextMenu>
                        </Grid.ContextMenu>
                    </Grid>
                </DataTemplate>

            </ScrollViewer.Resources>
            <!--[*]设置对应的ViewModel,在.cs文件中取DataContext即得到-->
            <ScrollViewer.DataContext>
                <vm:GlobalPanel2VM/>
            </ScrollViewer.DataContext>
            <!--[*]设置命令所绑定的执行方法-->
            <ScrollViewer.CommandBindings>
                <CommandBinding Command="{StaticResource Commands.CreateNodes}" Executed="CreateNode_Executed"/>
                <CommandBinding Command="{StaticResource Commands.DeleteSelectedNodes}" Executed="DeleteSelectedNodes_Executed"/>
                <CommandBinding Command="{StaticResource Commands.Edit}" Executed="Edit_Executed"/>
                <CommandBinding Command="{StaticResource Commands.EditStateMachine}" Executed="EditStateMachine_Executed"/>
            </ScrollViewer.CommandBindings>
            <!--[*]设置右键菜单-->
            <ScrollViewer.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="添加类图" Command="{StaticResource Commands.CreateNodes}" ToolTip="添加新类图"/>
                    <!--<MenuItem Header="删除" Command="{StaticResource Commands.DeleteSelectedNodes}" ToolTip="删除类图"/>
                    <MenuItem Header="编辑" Command="{StaticResource Commands.Edit}" ToolTip="编辑内容"/>-->
                </ContextMenu>
            </ScrollViewer.ContextMenu>
            <!--[*]设置绑定按键触发的命令-->
            <ScrollViewer.InputBindings>
                <KeyBinding Key="Delete" Command="{StaticResource Commands.DeleteSelectedNodes}"/>
            </ScrollViewer.InputBindings>
            <!--放入NetworkView,并添加各个事件的处理函数-->
            <NetworkUI:NetworkView
            x:Name="networkControl"
            Width="800"
            Height="918"
            NodesSource="{Binding Network.Nodes}"
            ConnectionsSource="{Binding Network.Connections}"
            ConnectionDragStarted="networkControl_ConnectionDragStarted"
            ConnectionDragging="networkControl_ConnectionDragging"
            ConnectionDragCompleted="networkControl_ConnectionDragCompleted"
            />
        </ScrollViewer>
        <Canvas x:Name="mainCanvas">
            <!--ContentControl内容控件，设置宽高、最小宽高、在Canvas中的位置，模板使用前面整合的DesignerItemTemplate-->
            <ContentControl Width="130"
                    MinWidth="50"
                    Height="130"
                    MinHeight="50"
                    Canvas.Top="150"
                    Canvas.Left="470"
                    Template="{StaticResource DesignerItemTemplate}">
                <!--ContentControl的Content放具体的图形-->
                <!--把IsHitTestVisible设置为False,看起来没有变化,但操作上已经把他完全忽视了,不触发事件,可以直接点到它下面的东西-->
            </ContentControl>
            <!--<local:UserTypeBlock Canvas.Top="100" Canvas.Left="270"/>-->
        </Canvas>
    </Grid>
</UserControl>
